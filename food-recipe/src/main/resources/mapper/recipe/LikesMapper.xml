<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.food.recipe.mapper.LikesMapper">

    <resultMap type="Likes" id="LikesResult">
        <result property="likeId"    column="like_id"    />
        <result property="recipeId"    column="recipe_id"    />
        <result property="userId"    column="user_id"    />
        <result property="createTime"    column="create_time"    />
        <result property="recipeName" column="recipe_name" />
        <result property="nickName" column="nick_name" />
    </resultMap>

    <resultMap type="Recipe" id="RecipeResult">
        <result property="recipeId"    column="recipe_id"    />
        <result property="userId"    column="user_id"    />
        <result property="recipeName"    column="recipe_name"    />
        <result property="recipeDescription"    column="recipe_description"    />
        <result property="recipeImage"    column="recipe_image"    />
        <result property="variety"    column="variety"    />
        <result property="likes"    column="likes"    />
        <result property="review"    column="review"    />
    </resultMap>

    <sql id="selectLikesVo">
        select like_id, recipe_id, user_id, create_time from likes
    </sql>

    <select id="selectLikesList" parameterType="Likes" resultMap="LikesResult">
        <include refid="selectLikesVo"/>
        <where>
            <if test="recipeId != null "> and recipe_id = #{recipeId}</if>
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="createTime != null "> and create_time = #{createTime}</if>
        </where>
    </select>

    <select id="selectLikesList1" resultMap="LikesResult">
        SELECT
            r.recipe_name,
            u.nick_name,
            l.create_time
        FROM
            likes l
                JOIN
            recipe r ON l.recipe_id = r.recipe_id
                JOIN
            sys_user u ON l.user_id = u.user_id
        <where>
            <if test="recipeName != null "> and r.recipe_name = #{recipeName}</if>
            <if test="nickName != null "> and u.nick_name = #{nickName}</if>
            <if test="createTime != null "> and l.create_time = #{createTime}</if>
        </where>
    </select>

    <select id="selectLikesByLikeId" parameterType="Long" resultMap="LikesResult">
        <include refid="selectLikesVo"/>
        where like_id = #{likeId}
    </select>

<!--    查询是否已经点赞-->
    <select id="likeSelect">
        select COUNT(*)
        from likes
        where user_id = #{userId} and recipe_id = #{recipeId}
    </select>
<!--    根据用户ID查询喜欢列表-->
    <select id="listUserId" resultMap="RecipeResult">
        SELECT
            r.recipe_id,
            r.user_id,
            r.recipe_name,
            r.recipe_description,
            r.recipe_image,
            r.variety,
            r.likes,
            r.review
        FROM
            Recipe r
                LEFT JOIN
            Likes l ON r.recipe_id = l.recipe_id
                LEFT JOIN
            Review re ON r.recipe_id = re.recipe_id
        WHERE
            l.user_id = #{userId}
        GROUP BY
            r.recipe_id,
            r.user_id,
            r.recipe_name,
            r.recipe_description,
            r.recipe_image,
            r.variety
    </select>

<!--    统计一周以来点赞量最高的前三名食谱-->
    <select id="threeLikes" resultMap="RecipeResult">
        SELECT r.recipe_id, r.recipe_name, r.recipe_image
        FROM recipe r
            JOIN (
            SELECT recipe_id
            FROM likes
            WHERE create_time BETWEEN #{startTime} AND #{endTime}
            GROUP BY recipe_id
            ORDER BY COUNT(*) DESC
                LIMIT 3
        ) top_liked_recipes ON r.recipe_id = top_liked_recipes.recipe_id;
    </select>

    <!--    点赞-->
    <insert id="insertLikes" parameterType="Likes">
        insert into likes
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="likeId != null">like_id,</if>
            <if test="recipeId != null">recipe_id,</if>
            <if test="userId != null">user_id,</if>
            <if test="createTime != null">create_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="likeId != null">#{likeId},</if>
            <if test="recipeId != null">#{recipeId},</if>
            <if test="userId != null">#{userId},</if>
            <if test="createTime != null">#{createTime},</if>
         </trim>
    </insert>

    <!-- 更新recipe表中的likes字段 -->
    <update id="updateRecipeLikes">
        UPDATE recipe
            LEFT JOIN (
            SELECT recipe_id, COUNT(recipe_id) AS like_count
            FROM likes
            GROUP BY recipe_id
            ) AS subquery ON recipe.recipe_id = subquery.recipe_id
            SET recipe.likes = IFNULL(subquery.like_count, 0);
    </update>

<!--    取消点赞-->
    <delete id="delete">
        delete from likes where recipe_id = #{recipeId} and user_id = #{userId}
    </delete>

    <update id="updateLikes" parameterType="Likes">
        update likes
        <trim prefix="SET" suffixOverrides=",">
            <if test="recipeId != null">recipe_id = #{recipeId},</if>
            <if test="userId != null">user_id = #{userId},</if>
        </trim>
        where like_id = #{likeId}
    </update>

    <delete id="deleteLikesByLikeId" parameterType="Long">
        delete from likes where like_id = #{likeId}
    </delete>

    <delete id="deleteLikesByLikeIds" parameterType="String">
        delete from likes where like_id in
        <foreach item="likeId" collection="array" open="(" separator="," close=")">
            #{likeId}
        </foreach>
    </delete>
</mapper>